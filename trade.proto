syntax = "proto3";
// This came from BOTD #3 Swap Protocol
//
//
import "swap.proto";

// Service Interface
service Trade {
  rpc Markets(MarketsRequest) returns (MarketsReply);
  rpc Balances(BalancesRequest) returns (BalancesReply);
  rpc MarketPrice(MarketPriceRequest) returns (MarketPriceReply);
  rpc TradePropose(TradeProposeRequest) returns (stream TradeProposeReply);
  rpc TradeComplete(TradeCompleteRequest) returns (stream TradeCompleteReply);
}

// Custom Types
//
//
message Market {
  string base_asset = 1;
  string quote_asset = 2;
}
message MarketWithFee {
  Market market = 1;
  float fee = 2;
}
message Balance {
  string asset = 1;
  int64 amount = 2;
}
message BalanceWithFee {
  Balance balance = 1;
  float fee = 2;
}
message Price {
  float base_price = 1;
  float quote_price = 2;
}
message PriceWithFee {
  Price price = 1;
  float fee = 2;
}

// Service's messages
//
//
message MarketsRequest {}
message MarketsReply { repeated MarketWithFee markets = 1; }

message BalancesRequest { Market market = 1; }
message BalancesReply { repeated BalanceWithFee balances = 1; }

message MarketPriceRequest { Market market = 1; }
message MarketPriceReply { repeated PriceWithFee prices = 1; }

message TradeProposeRequest {
  Market market = 1;
  enum Type {
    BUY = 0;
    SELL = 1;
  }
  Type type = 2;
  SwapRequest swap_request = 3;
}
message TradeProposeReply {
  SwapAccept swap_accept = 1;
  SwapFail swap_fail = 2;
  int64 expiry_time_unix = 3;
}

message TradeCompleteRequest {
  SwapComplete swap_complete = 1;
  SwapFail swap_fail = 2;
}
message TradeCompleteReply { string txid = 1; }