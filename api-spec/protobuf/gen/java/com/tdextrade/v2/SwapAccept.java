// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: v2/swap.proto

package com.tdextrade.v2;

/**
 * Protobuf type {@code tdextrade.v2.SwapAccept}
 */
public final class SwapAccept extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:tdextrade.v2.SwapAccept)
    SwapAcceptOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SwapAccept.newBuilder() to construct.
  private SwapAccept(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SwapAccept() {
    id_ = "";
    requestId_ = "";
    transaction_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new SwapAccept();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private SwapAccept(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            id_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            requestId_ = s;
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            transaction_ = s;
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              inputBlindingKey_ = com.google.protobuf.MapField.newMapField(
                  InputBlindingKeyDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000001;
            }
            com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ByteString>
            inputBlindingKey__ = input.readMessage(
                InputBlindingKeyDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            inputBlindingKey_.getMutableMap().put(
                inputBlindingKey__.getKey(), inputBlindingKey__.getValue());
            break;
          }
          case 42: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              outputBlindingKey_ = com.google.protobuf.MapField.newMapField(
                  OutputBlindingKeyDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000002;
            }
            com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ByteString>
            outputBlindingKey__ = input.readMessage(
                OutputBlindingKeyDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            outputBlindingKey_.getMutableMap().put(
                outputBlindingKey__.getKey(), outputBlindingKey__.getValue());
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.tdextrade.v2.SwapProto.internal_static_tdextrade_v2_SwapAccept_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 4:
        return internalGetInputBlindingKey();
      case 5:
        return internalGetOutputBlindingKey();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.tdextrade.v2.SwapProto.internal_static_tdextrade_v2_SwapAccept_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.tdextrade.v2.SwapAccept.class, com.tdextrade.v2.SwapAccept.Builder.class);
  }

  public static final int ID_FIELD_NUMBER = 1;
  private volatile java.lang.Object id_;
  /**
   * <pre>
   * Random unique identifier for the current message
   * </pre>
   *
   * <code>string id = 1 [json_name = "id"];</code>
   * @return The id.
   */
  @java.lang.Override
  public java.lang.String getId() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      id_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Random unique identifier for the current message
   * </pre>
   *
   * <code>string id = 1 [json_name = "id"];</code>
   * @return The bytes for id.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getIdBytes() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      id_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int REQUEST_ID_FIELD_NUMBER = 2;
  private volatile java.lang.Object requestId_;
  /**
   * <pre>
   * indetifier of the SwapRequest message
   * </pre>
   *
   * <code>string request_id = 2 [json_name = "requestId"];</code>
   * @return The requestId.
   */
  @java.lang.Override
  public java.lang.String getRequestId() {
    java.lang.Object ref = requestId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      requestId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * indetifier of the SwapRequest message
   * </pre>
   *
   * <code>string request_id = 2 [json_name = "requestId"];</code>
   * @return The bytes for requestId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getRequestIdBytes() {
    java.lang.Object ref = requestId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      requestId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TRANSACTION_FIELD_NUMBER = 3;
  private volatile java.lang.Object transaction_;
  /**
   * <pre>
   * The partial signed transaction base64 encoded containing the Responder's
   * signed inputs in a PSBT format
   * </pre>
   *
   * <code>string transaction = 3 [json_name = "transaction"];</code>
   * @return The transaction.
   */
  @java.lang.Override
  public java.lang.String getTransaction() {
    java.lang.Object ref = transaction_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      transaction_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The partial signed transaction base64 encoded containing the Responder's
   * signed inputs in a PSBT format
   * </pre>
   *
   * <code>string transaction = 3 [json_name = "transaction"];</code>
   * @return The bytes for transaction.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTransactionBytes() {
    java.lang.Object ref = transaction_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      transaction_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int INPUT_BLINDING_KEY_FIELD_NUMBER = 4;
  private static final class InputBlindingKeyDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, com.google.protobuf.ByteString> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, com.google.protobuf.ByteString>newDefaultInstance(
                com.tdextrade.v2.SwapProto.internal_static_tdextrade_v2_SwapAccept_InputBlindingKeyEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.BYTES,
                com.google.protobuf.ByteString.EMPTY);
  }
  private com.google.protobuf.MapField<
      java.lang.String, com.google.protobuf.ByteString> inputBlindingKey_;
  private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
  internalGetInputBlindingKey() {
    if (inputBlindingKey_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          InputBlindingKeyDefaultEntryHolder.defaultEntry);
    }
    return inputBlindingKey_;
  }

  public int getInputBlindingKeyCount() {
    return internalGetInputBlindingKey().getMap().size();
  }
  /**
   * <pre>
   * In case of a confidential transaction the blinding key of each confidential
   * input is included. Each blinding key is identified by the prevout script
   * hex encoded.
   * </pre>
   *
   * <code>map&lt;string, bytes&gt; input_blinding_key = 4 [json_name = "inputBlindingKey"];</code>
   */

  @java.lang.Override
  public boolean containsInputBlindingKey(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetInputBlindingKey().getMap().containsKey(key);
  }
  /**
   * Use {@link #getInputBlindingKeyMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getInputBlindingKey() {
    return getInputBlindingKeyMap();
  }
  /**
   * <pre>
   * In case of a confidential transaction the blinding key of each confidential
   * input is included. Each blinding key is identified by the prevout script
   * hex encoded.
   * </pre>
   *
   * <code>map&lt;string, bytes&gt; input_blinding_key = 4 [json_name = "inputBlindingKey"];</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getInputBlindingKeyMap() {
    return internalGetInputBlindingKey().getMap();
  }
  /**
   * <pre>
   * In case of a confidential transaction the blinding key of each confidential
   * input is included. Each blinding key is identified by the prevout script
   * hex encoded.
   * </pre>
   *
   * <code>map&lt;string, bytes&gt; input_blinding_key = 4 [json_name = "inputBlindingKey"];</code>
   */
  @java.lang.Override

  public com.google.protobuf.ByteString getInputBlindingKeyOrDefault(
      java.lang.String key,
      com.google.protobuf.ByteString defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
        internalGetInputBlindingKey().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * In case of a confidential transaction the blinding key of each confidential
   * input is included. Each blinding key is identified by the prevout script
   * hex encoded.
   * </pre>
   *
   * <code>map&lt;string, bytes&gt; input_blinding_key = 4 [json_name = "inputBlindingKey"];</code>
   */
  @java.lang.Override

  public com.google.protobuf.ByteString getInputBlindingKeyOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
        internalGetInputBlindingKey().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int OUTPUT_BLINDING_KEY_FIELD_NUMBER = 5;
  private static final class OutputBlindingKeyDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, com.google.protobuf.ByteString> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, com.google.protobuf.ByteString>newDefaultInstance(
                com.tdextrade.v2.SwapProto.internal_static_tdextrade_v2_SwapAccept_OutputBlindingKeyEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.BYTES,
                com.google.protobuf.ByteString.EMPTY);
  }
  private com.google.protobuf.MapField<
      java.lang.String, com.google.protobuf.ByteString> outputBlindingKey_;
  private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
  internalGetOutputBlindingKey() {
    if (outputBlindingKey_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          OutputBlindingKeyDefaultEntryHolder.defaultEntry);
    }
    return outputBlindingKey_;
  }

  public int getOutputBlindingKeyCount() {
    return internalGetOutputBlindingKey().getMap().size();
  }
  /**
   * <pre>
   * In case of a confidential transaction the blinding key of each confidential
   * output is included. Each blinding key is identified by the output script
   * hex encoded.
   * </pre>
   *
   * <code>map&lt;string, bytes&gt; output_blinding_key = 5 [json_name = "outputBlindingKey"];</code>
   */

  @java.lang.Override
  public boolean containsOutputBlindingKey(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetOutputBlindingKey().getMap().containsKey(key);
  }
  /**
   * Use {@link #getOutputBlindingKeyMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getOutputBlindingKey() {
    return getOutputBlindingKeyMap();
  }
  /**
   * <pre>
   * In case of a confidential transaction the blinding key of each confidential
   * output is included. Each blinding key is identified by the output script
   * hex encoded.
   * </pre>
   *
   * <code>map&lt;string, bytes&gt; output_blinding_key = 5 [json_name = "outputBlindingKey"];</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getOutputBlindingKeyMap() {
    return internalGetOutputBlindingKey().getMap();
  }
  /**
   * <pre>
   * In case of a confidential transaction the blinding key of each confidential
   * output is included. Each blinding key is identified by the output script
   * hex encoded.
   * </pre>
   *
   * <code>map&lt;string, bytes&gt; output_blinding_key = 5 [json_name = "outputBlindingKey"];</code>
   */
  @java.lang.Override

  public com.google.protobuf.ByteString getOutputBlindingKeyOrDefault(
      java.lang.String key,
      com.google.protobuf.ByteString defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
        internalGetOutputBlindingKey().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * In case of a confidential transaction the blinding key of each confidential
   * output is included. Each blinding key is identified by the output script
   * hex encoded.
   * </pre>
   *
   * <code>map&lt;string, bytes&gt; output_blinding_key = 5 [json_name = "outputBlindingKey"];</code>
   */
  @java.lang.Override

  public com.google.protobuf.ByteString getOutputBlindingKeyOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
        internalGetOutputBlindingKey().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(requestId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, requestId_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(transaction_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, transaction_);
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetInputBlindingKey(),
        InputBlindingKeyDefaultEntryHolder.defaultEntry,
        4);
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetOutputBlindingKey(),
        OutputBlindingKeyDefaultEntryHolder.defaultEntry,
        5);
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(requestId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, requestId_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(transaction_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, transaction_);
    }
    for (java.util.Map.Entry<java.lang.String, com.google.protobuf.ByteString> entry
         : internalGetInputBlindingKey().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ByteString>
      inputBlindingKey__ = InputBlindingKeyDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, inputBlindingKey__);
    }
    for (java.util.Map.Entry<java.lang.String, com.google.protobuf.ByteString> entry
         : internalGetOutputBlindingKey().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ByteString>
      outputBlindingKey__ = OutputBlindingKeyDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, outputBlindingKey__);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.tdextrade.v2.SwapAccept)) {
      return super.equals(obj);
    }
    com.tdextrade.v2.SwapAccept other = (com.tdextrade.v2.SwapAccept) obj;

    if (!getId()
        .equals(other.getId())) return false;
    if (!getRequestId()
        .equals(other.getRequestId())) return false;
    if (!getTransaction()
        .equals(other.getTransaction())) return false;
    if (!internalGetInputBlindingKey().equals(
        other.internalGetInputBlindingKey())) return false;
    if (!internalGetOutputBlindingKey().equals(
        other.internalGetOutputBlindingKey())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ID_FIELD_NUMBER;
    hash = (53 * hash) + getId().hashCode();
    hash = (37 * hash) + REQUEST_ID_FIELD_NUMBER;
    hash = (53 * hash) + getRequestId().hashCode();
    hash = (37 * hash) + TRANSACTION_FIELD_NUMBER;
    hash = (53 * hash) + getTransaction().hashCode();
    if (!internalGetInputBlindingKey().getMap().isEmpty()) {
      hash = (37 * hash) + INPUT_BLINDING_KEY_FIELD_NUMBER;
      hash = (53 * hash) + internalGetInputBlindingKey().hashCode();
    }
    if (!internalGetOutputBlindingKey().getMap().isEmpty()) {
      hash = (37 * hash) + OUTPUT_BLINDING_KEY_FIELD_NUMBER;
      hash = (53 * hash) + internalGetOutputBlindingKey().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.tdextrade.v2.SwapAccept parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.tdextrade.v2.SwapAccept parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.tdextrade.v2.SwapAccept parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.tdextrade.v2.SwapAccept parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.tdextrade.v2.SwapAccept parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.tdextrade.v2.SwapAccept parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.tdextrade.v2.SwapAccept parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.tdextrade.v2.SwapAccept parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.tdextrade.v2.SwapAccept parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.tdextrade.v2.SwapAccept parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.tdextrade.v2.SwapAccept parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.tdextrade.v2.SwapAccept parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.tdextrade.v2.SwapAccept prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code tdextrade.v2.SwapAccept}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:tdextrade.v2.SwapAccept)
      com.tdextrade.v2.SwapAcceptOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.tdextrade.v2.SwapProto.internal_static_tdextrade_v2_SwapAccept_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 4:
          return internalGetInputBlindingKey();
        case 5:
          return internalGetOutputBlindingKey();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 4:
          return internalGetMutableInputBlindingKey();
        case 5:
          return internalGetMutableOutputBlindingKey();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.tdextrade.v2.SwapProto.internal_static_tdextrade_v2_SwapAccept_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.tdextrade.v2.SwapAccept.class, com.tdextrade.v2.SwapAccept.Builder.class);
    }

    // Construct using com.tdextrade.v2.SwapAccept.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      id_ = "";

      requestId_ = "";

      transaction_ = "";

      internalGetMutableInputBlindingKey().clear();
      internalGetMutableOutputBlindingKey().clear();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.tdextrade.v2.SwapProto.internal_static_tdextrade_v2_SwapAccept_descriptor;
    }

    @java.lang.Override
    public com.tdextrade.v2.SwapAccept getDefaultInstanceForType() {
      return com.tdextrade.v2.SwapAccept.getDefaultInstance();
    }

    @java.lang.Override
    public com.tdextrade.v2.SwapAccept build() {
      com.tdextrade.v2.SwapAccept result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.tdextrade.v2.SwapAccept buildPartial() {
      com.tdextrade.v2.SwapAccept result = new com.tdextrade.v2.SwapAccept(this);
      int from_bitField0_ = bitField0_;
      result.id_ = id_;
      result.requestId_ = requestId_;
      result.transaction_ = transaction_;
      result.inputBlindingKey_ = internalGetInputBlindingKey();
      result.inputBlindingKey_.makeImmutable();
      result.outputBlindingKey_ = internalGetOutputBlindingKey();
      result.outputBlindingKey_.makeImmutable();
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.tdextrade.v2.SwapAccept) {
        return mergeFrom((com.tdextrade.v2.SwapAccept)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.tdextrade.v2.SwapAccept other) {
      if (other == com.tdextrade.v2.SwapAccept.getDefaultInstance()) return this;
      if (!other.getId().isEmpty()) {
        id_ = other.id_;
        onChanged();
      }
      if (!other.getRequestId().isEmpty()) {
        requestId_ = other.requestId_;
        onChanged();
      }
      if (!other.getTransaction().isEmpty()) {
        transaction_ = other.transaction_;
        onChanged();
      }
      internalGetMutableInputBlindingKey().mergeFrom(
          other.internalGetInputBlindingKey());
      internalGetMutableOutputBlindingKey().mergeFrom(
          other.internalGetOutputBlindingKey());
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.tdextrade.v2.SwapAccept parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.tdextrade.v2.SwapAccept) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object id_ = "";
    /**
     * <pre>
     * Random unique identifier for the current message
     * </pre>
     *
     * <code>string id = 1 [json_name = "id"];</code>
     * @return The id.
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Random unique identifier for the current message
     * </pre>
     *
     * <code>string id = 1 [json_name = "id"];</code>
     * @return The bytes for id.
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Random unique identifier for the current message
     * </pre>
     *
     * <code>string id = 1 [json_name = "id"];</code>
     * @param value The id to set.
     * @return This builder for chaining.
     */
    public Builder setId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      id_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Random unique identifier for the current message
     * </pre>
     *
     * <code>string id = 1 [json_name = "id"];</code>
     * @return This builder for chaining.
     */
    public Builder clearId() {
      
      id_ = getDefaultInstance().getId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Random unique identifier for the current message
     * </pre>
     *
     * <code>string id = 1 [json_name = "id"];</code>
     * @param value The bytes for id to set.
     * @return This builder for chaining.
     */
    public Builder setIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      id_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object requestId_ = "";
    /**
     * <pre>
     * indetifier of the SwapRequest message
     * </pre>
     *
     * <code>string request_id = 2 [json_name = "requestId"];</code>
     * @return The requestId.
     */
    public java.lang.String getRequestId() {
      java.lang.Object ref = requestId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        requestId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * indetifier of the SwapRequest message
     * </pre>
     *
     * <code>string request_id = 2 [json_name = "requestId"];</code>
     * @return The bytes for requestId.
     */
    public com.google.protobuf.ByteString
        getRequestIdBytes() {
      java.lang.Object ref = requestId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        requestId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * indetifier of the SwapRequest message
     * </pre>
     *
     * <code>string request_id = 2 [json_name = "requestId"];</code>
     * @param value The requestId to set.
     * @return This builder for chaining.
     */
    public Builder setRequestId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      requestId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * indetifier of the SwapRequest message
     * </pre>
     *
     * <code>string request_id = 2 [json_name = "requestId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearRequestId() {
      
      requestId_ = getDefaultInstance().getRequestId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * indetifier of the SwapRequest message
     * </pre>
     *
     * <code>string request_id = 2 [json_name = "requestId"];</code>
     * @param value The bytes for requestId to set.
     * @return This builder for chaining.
     */
    public Builder setRequestIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      requestId_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object transaction_ = "";
    /**
     * <pre>
     * The partial signed transaction base64 encoded containing the Responder's
     * signed inputs in a PSBT format
     * </pre>
     *
     * <code>string transaction = 3 [json_name = "transaction"];</code>
     * @return The transaction.
     */
    public java.lang.String getTransaction() {
      java.lang.Object ref = transaction_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        transaction_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The partial signed transaction base64 encoded containing the Responder's
     * signed inputs in a PSBT format
     * </pre>
     *
     * <code>string transaction = 3 [json_name = "transaction"];</code>
     * @return The bytes for transaction.
     */
    public com.google.protobuf.ByteString
        getTransactionBytes() {
      java.lang.Object ref = transaction_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        transaction_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The partial signed transaction base64 encoded containing the Responder's
     * signed inputs in a PSBT format
     * </pre>
     *
     * <code>string transaction = 3 [json_name = "transaction"];</code>
     * @param value The transaction to set.
     * @return This builder for chaining.
     */
    public Builder setTransaction(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      transaction_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The partial signed transaction base64 encoded containing the Responder's
     * signed inputs in a PSBT format
     * </pre>
     *
     * <code>string transaction = 3 [json_name = "transaction"];</code>
     * @return This builder for chaining.
     */
    public Builder clearTransaction() {
      
      transaction_ = getDefaultInstance().getTransaction();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The partial signed transaction base64 encoded containing the Responder's
     * signed inputs in a PSBT format
     * </pre>
     *
     * <code>string transaction = 3 [json_name = "transaction"];</code>
     * @param value The bytes for transaction to set.
     * @return This builder for chaining.
     */
    public Builder setTransactionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      transaction_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, com.google.protobuf.ByteString> inputBlindingKey_;
    private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
    internalGetInputBlindingKey() {
      if (inputBlindingKey_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            InputBlindingKeyDefaultEntryHolder.defaultEntry);
      }
      return inputBlindingKey_;
    }
    private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
    internalGetMutableInputBlindingKey() {
      onChanged();;
      if (inputBlindingKey_ == null) {
        inputBlindingKey_ = com.google.protobuf.MapField.newMapField(
            InputBlindingKeyDefaultEntryHolder.defaultEntry);
      }
      if (!inputBlindingKey_.isMutable()) {
        inputBlindingKey_ = inputBlindingKey_.copy();
      }
      return inputBlindingKey_;
    }

    public int getInputBlindingKeyCount() {
      return internalGetInputBlindingKey().getMap().size();
    }
    /**
     * <pre>
     * In case of a confidential transaction the blinding key of each confidential
     * input is included. Each blinding key is identified by the prevout script
     * hex encoded.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; input_blinding_key = 4 [json_name = "inputBlindingKey"];</code>
     */

    @java.lang.Override
    public boolean containsInputBlindingKey(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetInputBlindingKey().getMap().containsKey(key);
    }
    /**
     * Use {@link #getInputBlindingKeyMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getInputBlindingKey() {
      return getInputBlindingKeyMap();
    }
    /**
     * <pre>
     * In case of a confidential transaction the blinding key of each confidential
     * input is included. Each blinding key is identified by the prevout script
     * hex encoded.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; input_blinding_key = 4 [json_name = "inputBlindingKey"];</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getInputBlindingKeyMap() {
      return internalGetInputBlindingKey().getMap();
    }
    /**
     * <pre>
     * In case of a confidential transaction the blinding key of each confidential
     * input is included. Each blinding key is identified by the prevout script
     * hex encoded.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; input_blinding_key = 4 [json_name = "inputBlindingKey"];</code>
     */
    @java.lang.Override

    public com.google.protobuf.ByteString getInputBlindingKeyOrDefault(
        java.lang.String key,
        com.google.protobuf.ByteString defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
          internalGetInputBlindingKey().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * In case of a confidential transaction the blinding key of each confidential
     * input is included. Each blinding key is identified by the prevout script
     * hex encoded.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; input_blinding_key = 4 [json_name = "inputBlindingKey"];</code>
     */
    @java.lang.Override

    public com.google.protobuf.ByteString getInputBlindingKeyOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
          internalGetInputBlindingKey().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearInputBlindingKey() {
      internalGetMutableInputBlindingKey().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * In case of a confidential transaction the blinding key of each confidential
     * input is included. Each blinding key is identified by the prevout script
     * hex encoded.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; input_blinding_key = 4 [json_name = "inputBlindingKey"];</code>
     */

    public Builder removeInputBlindingKey(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableInputBlindingKey().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.protobuf.ByteString>
    getMutableInputBlindingKey() {
      return internalGetMutableInputBlindingKey().getMutableMap();
    }
    /**
     * <pre>
     * In case of a confidential transaction the blinding key of each confidential
     * input is included. Each blinding key is identified by the prevout script
     * hex encoded.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; input_blinding_key = 4 [json_name = "inputBlindingKey"];</code>
     */
    public Builder putInputBlindingKey(
        java.lang.String key,
        com.google.protobuf.ByteString value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) {
  throw new NullPointerException("map value");
}

      internalGetMutableInputBlindingKey().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <pre>
     * In case of a confidential transaction the blinding key of each confidential
     * input is included. Each blinding key is identified by the prevout script
     * hex encoded.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; input_blinding_key = 4 [json_name = "inputBlindingKey"];</code>
     */

    public Builder putAllInputBlindingKey(
        java.util.Map<java.lang.String, com.google.protobuf.ByteString> values) {
      internalGetMutableInputBlindingKey().getMutableMap()
          .putAll(values);
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, com.google.protobuf.ByteString> outputBlindingKey_;
    private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
    internalGetOutputBlindingKey() {
      if (outputBlindingKey_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            OutputBlindingKeyDefaultEntryHolder.defaultEntry);
      }
      return outputBlindingKey_;
    }
    private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
    internalGetMutableOutputBlindingKey() {
      onChanged();;
      if (outputBlindingKey_ == null) {
        outputBlindingKey_ = com.google.protobuf.MapField.newMapField(
            OutputBlindingKeyDefaultEntryHolder.defaultEntry);
      }
      if (!outputBlindingKey_.isMutable()) {
        outputBlindingKey_ = outputBlindingKey_.copy();
      }
      return outputBlindingKey_;
    }

    public int getOutputBlindingKeyCount() {
      return internalGetOutputBlindingKey().getMap().size();
    }
    /**
     * <pre>
     * In case of a confidential transaction the blinding key of each confidential
     * output is included. Each blinding key is identified by the output script
     * hex encoded.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; output_blinding_key = 5 [json_name = "outputBlindingKey"];</code>
     */

    @java.lang.Override
    public boolean containsOutputBlindingKey(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetOutputBlindingKey().getMap().containsKey(key);
    }
    /**
     * Use {@link #getOutputBlindingKeyMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getOutputBlindingKey() {
      return getOutputBlindingKeyMap();
    }
    /**
     * <pre>
     * In case of a confidential transaction the blinding key of each confidential
     * output is included. Each blinding key is identified by the output script
     * hex encoded.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; output_blinding_key = 5 [json_name = "outputBlindingKey"];</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getOutputBlindingKeyMap() {
      return internalGetOutputBlindingKey().getMap();
    }
    /**
     * <pre>
     * In case of a confidential transaction the blinding key of each confidential
     * output is included. Each blinding key is identified by the output script
     * hex encoded.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; output_blinding_key = 5 [json_name = "outputBlindingKey"];</code>
     */
    @java.lang.Override

    public com.google.protobuf.ByteString getOutputBlindingKeyOrDefault(
        java.lang.String key,
        com.google.protobuf.ByteString defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
          internalGetOutputBlindingKey().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * In case of a confidential transaction the blinding key of each confidential
     * output is included. Each blinding key is identified by the output script
     * hex encoded.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; output_blinding_key = 5 [json_name = "outputBlindingKey"];</code>
     */
    @java.lang.Override

    public com.google.protobuf.ByteString getOutputBlindingKeyOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
          internalGetOutputBlindingKey().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearOutputBlindingKey() {
      internalGetMutableOutputBlindingKey().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * In case of a confidential transaction the blinding key of each confidential
     * output is included. Each blinding key is identified by the output script
     * hex encoded.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; output_blinding_key = 5 [json_name = "outputBlindingKey"];</code>
     */

    public Builder removeOutputBlindingKey(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableOutputBlindingKey().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.protobuf.ByteString>
    getMutableOutputBlindingKey() {
      return internalGetMutableOutputBlindingKey().getMutableMap();
    }
    /**
     * <pre>
     * In case of a confidential transaction the blinding key of each confidential
     * output is included. Each blinding key is identified by the output script
     * hex encoded.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; output_blinding_key = 5 [json_name = "outputBlindingKey"];</code>
     */
    public Builder putOutputBlindingKey(
        java.lang.String key,
        com.google.protobuf.ByteString value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) {
  throw new NullPointerException("map value");
}

      internalGetMutableOutputBlindingKey().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <pre>
     * In case of a confidential transaction the blinding key of each confidential
     * output is included. Each blinding key is identified by the output script
     * hex encoded.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; output_blinding_key = 5 [json_name = "outputBlindingKey"];</code>
     */

    public Builder putAllOutputBlindingKey(
        java.util.Map<java.lang.String, com.google.protobuf.ByteString> values) {
      internalGetMutableOutputBlindingKey().getMutableMap()
          .putAll(values);
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:tdextrade.v2.SwapAccept)
  }

  // @@protoc_insertion_point(class_scope:tdextrade.v2.SwapAccept)
  private static final com.tdextrade.v2.SwapAccept DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.tdextrade.v2.SwapAccept();
  }

  public static com.tdextrade.v2.SwapAccept getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SwapAccept>
      PARSER = new com.google.protobuf.AbstractParser<SwapAccept>() {
    @java.lang.Override
    public SwapAccept parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new SwapAccept(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<SwapAccept> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SwapAccept> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.tdextrade.v2.SwapAccept getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

