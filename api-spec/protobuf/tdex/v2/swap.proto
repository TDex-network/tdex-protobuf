syntax = "proto3";

package tdex.v2;

import "tdex/v2/types.proto";

message SwapRequest {
  // Random unique identifier for the current message
  string id = 1;
  // The proposer's quantity
  uint64 amount_p = 2;
  // The proposer's asset hash
  string asset_p = 3;
  // The responder's quantity
  uint64 amount_r = 4;
  // The responder's asset hash
  string asset_r = 5;
  // The proposer's unsigned transaction in PSET v2 format (base64 string)
  string transaction = 6;
  // The fee amount charged to the proposer by the provider.
  uint64 fee_amount = 7;
  // The asset hash of the fee charged to the proposer.
  string fee_asset = 8;
  // The list of trader's unblinded inputs data, even in case they are
  // unconfidential.
  repeated UnblindedInput unblinded_inputs = 9;
}

message SwapAccept {
  // Random unique identifier for the current message
  string id = 1;
  // indetifier of the SwapRequest message
  string request_id = 2;
  // The partial signed transaction base64 encoded containing the Responder's
  // signed inputs in a PSBT format
  string transaction = 3;
  // In case of psetv2 transaction, the original list of trader's unblinded inputs,
  // including also those of the inputs added by the provider.
  repeated UnblindedInput unblinded_inputs = 4;
}

message SwapComplete {
  // Random unique identifier for the current message
  string id = 1;
  // indetifier of the SwapAccept message
  string accept_id = 2;
  // The signed transaction base64 encoded containing the Proposers's signed
  // inputs in a PSBT format
  string transaction = 3;
}

message SwapFail {
  // Random unique identifier for the current message
  string id = 1;
  // indetifier of either SwapRequest or SwapAccept message. It can be empty
  string message_id = 2;
  // The failure code. It can be empty
  uint32 failure_code = 3;
  // The failure reason messaged
  string failure_message = 4;
}
